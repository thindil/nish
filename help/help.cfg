[Aliases]
topic="alias"
usage="alias ?subcommand?"
content="If entered it without a subcommand, show the list of available subcommands for 'aliases' command. Otherwise, execute the selected subcommand."

[Aliases]
topic="alias list"
usage="alias list ?all?"
content="Show the list of all available aliases in the current directory. If the parameter 'all' added, show all declared aliases."

[Aliases]
topic="alias delete"
usage="alias delete [index]"
content="Delete the alias with the selected index."

[Aliases]
topic="alias show"
usage="alias show [index]"
content="Show details (description, commands, etc) for the alias with the selected index."

[Aliases]
topic="alias add"
usage="alias add"
content="Start adding a new alias to the shell. You will be able to set its name, description, commands, etc."

[Aliases]
topic="alias edit"
usage="alias edit [index]"
content="Start editing the alias with the selected index. You will be able to set again its all parameters."

[Commands]
topic="cd"
usage="cd ?directory?"
content="You must have permissions to enter the directory and the directory need to exists. If you enter just 'cd' without the name of the directory to enter, the current directory will be switched to your home directory."

[Commands]
topic="exit"
usage="exit"
content="Exit from the shell."

[Commands]
topic="merge commands"
usage="command [&& or ||] command ..."
content="Commands can be merged to execute each after another. If merged with && then the next command(s) will be executed only when the previous was successfull. If merged with || then the next commands will be executed only when the previous failed."

[Help]
topic="help"
usage="help ?topic?"
content="If entered only as 'help', show the list of available help topics, when also the 'topic' entered, show the information about the selected topic. The 'topic' parameter can contains wildcard symbols `*`. In that situation, the result will be the list of the help's topics which match the criteria. For example, command `help a*` will show all help topics which name starts with 'a' letter."

[Help]
topic="updatehelp"
usage="updatehelp"
content="Update the content of the shell's help in the local database from the default values. All local changes will be removed. You won't be asked for confirmation."

[History]
topic="history"
usage="history ?subcommand?"
content="If entered without subcommand, show the list of available subcommands for 'history' command. Otherwise, execute the selected subcommand."

[History]
topic="history clear"
usage="history clear"
content="Clear the shell's commands' history."

[History]
topic="history list"
usage="history list ?amount? ?order? ?reverse?"
content="Show the last $1 commands from the shell's history ordered by $2$3 You can also set the amount, the order and the direction of the order of commands to show, by adding optional parameters 'amount', 'order' and 'reverse'. For example, to show the last 10 commands sorted by their names in the reversed order: `history list 10 name true`. Available switches for the 'order' parameter are: 'amount', 'recent', 'name', 'recentamount'. Available values for the 'reverse' parameter are 'true' or 'false'."
template=True

[History]
topic="history find"
usage="history find [term]"
content="Search for the selected term in the shell's commands' history. You can use here the wildcard `*` for match any character. By default the wildcard `*` is added before and after the term. For example, the command `history find hi` will find the command `history` but also `help history`".

[Options]
topic="options"
usage="options ?subcommand?"
content="If entered without 'subcommand' parameter, show the list of available subcommands for 'options' command. Otherwise, execute the selected subcommand."

[Options]
topic="options list"
usage="options list"
content="Show the list of all available shell's options with the detailed information about them."

[Options]
topic="options set"
usage="options set [name] [value]"
content="Set the selected shell's option with the name to the selected value. The value can't contain the new line character."

[Options]
topic="options reset"
usage="options reset [name or all]"
content="Reset the selected shell's option with the name to the default value. If the name parameter is set to 'all', reset all shell's options to their default values."

[Output]
topic="output headers"
usage="options set outputHeaders [unicode or ascii or none or hidden]"
content="Some commands starts its output with drawing headers, same for forms' sections for setting aliases and variables. It is possible to change the look of the headers with the shell's option outputHeaders. Possible values for that option: 'unicode' (default): use Unicode characters to draw frame around the header, 'ascii': use ASCII characters for the frame, 'none': show only the header's text and 'hidden': hide the header completely."

[Plugins]
topic="plugin"
usage="plugin ?subcommand?"
content="If entered without 'subcommand' parameter, show the list of available subcommands for 'plugins' command. Otherwise, execute the selected subcommand."

[Plugins]
topic="plugin list"
usage="plugin list ?all?"
content="Show the list of all enabled plugins. If parameter 'all' added, show all installed plugins."

[Plugins]
topic="plugin remove"
usage="plugin remove [index]"
content="Uninstall the plugin with the selected index."

[Plugins]
topic="plugin show"
usage="plugin show [index]"
content="Show details (path, status, etc) for the plugin with the selected index."

[Plugins]
topic="plugin add"
usage="plugin add [path]"
content="Install the selected plugin in the shell. The 'path' parameter must be an absolute or a relative path to the plugin."

[Plugins]
topic="plugin enable"
usage="plugin enable [index]"
content="Enable the selected plugin. Index must be the index of an installed plugin."

[Plugins]
topic="plugin disable"
usage="plugin disable [index]"
content="Disable the selected plugin. Index must be the index of an installed plugin."

[Prompt]
topic="prompt"
usage="set options promptCommand 'program ?arguments?'"
content="The shell's prompt can be set as the output of a command. It is possible by setting the shell's option promptCommand. For example, to set the prompt to listing the current directory, you can type `options set promptCommand 'ls -a .'`. Please remember, that the command will be executed every time before you execute another command."

[Variables]
topic="set"
usage="set [name=value]"
content="Set the environment variable with the selected name and value."

[Variables]
topic="unset"
usage="unset [name]"
content="Remove the environment variable with the selected name."

[Variables]
topic="variable"
usage="variable ?subcommand?"
content="If entered without subcommand, show the list of available subcommands for 'variables' command. Otherwise, execute the selected subcommand."

[Variables]
topic="variable list"
usage="variable list ?all?"
content="Show the list of all declared in shell environment variables in the current directory. If parameter 'all' added, show all declared environment variables."

[Variables]
topic="variable delete"
usage="variable delete [index]"
content="Delete the declared in shell environment variable with the selected index."

[Variables]
topic="variable add"
usage="variable add"
content="Start adding a new variable to the shell. You will be able to set its name, description, value, etc."

[Variables]
topic="variable edit"
usage="variable edit [index]"
content="Start editing the variable with the selected index. You will be able to set again its all parameters."

[Variables]
topic="variable show"
usage="variable show [index]"
content="Show details (description, path, etc) for the variable with the selected index."
